Course.java

enrollStudent():
    Service Logic, Boundary Check
        Need to check space available first, and return false if it is full.
dropStudent():
    Service Logic, Boundary Check
        Need to check enrollment count first, if no body enrolled, we cannot drop.
getCourseLocation():
    Incontextualized Return Values
getInstructorName():
    Incontextualized Return Values
isCourseFull():
    Service Logic, Not Stringent, Incontextualized Return Values
        Javadoc states whether the course has REACHED its capacity, not EXCEEDED as indicated by the '>' sign.
toString():
    [PMD] Missing Override


Department.java

.courses:
    [PMD] Loose Coupling
        Use Map interface instead of HashMap implementation.
    [PMD] Unnecessary Import
getNumberOfMajors():
    Obvious Typos
getDepartmentChair():
    Obvious Typos
    [PMD] Unused Private Field
dropPersonFromMajor():
    Boundary Check
        Check current major number is greater than 0 then perform drop.
    [PMD] Control Statement Braces
        Although this style is strictly forbidden in kernel development...
toString():
    [PMD] Missing Override
    Obvious Typos


RouteController.java

retrieveDepartment():
    [PMD] Loose Coupling
        Use Map interface instead of HashMap implementation. (same in following cases)
retrieveCourse():
    [PMD] Loose Coupling
isCourseFull():
    [PMD] Loose Coupling
getMajorCtFromDept():
    [PMD] Loose Coupling
identifyDeptChair():
    [PMD] Loose Coupling
findCourseLocation():
    [PMD] Loose Coupling
findCourseInstructor():
    [PMD] Loose Coupling
findCourseTime():
    [PMD] Loose Coupling
addMajorToDept():
    [PMD] Loose Coupling
removeMajorFromDept():
    [PMD] Loose Coupling
dropStudent():
    [PMD] Loose Coupling
setEnrollmentCount():
    [PMD] Loose Coupling
changeCourseTime():
    [PMD] Loose Coupling
changeCourseTeacher():
    [PMD] Loose Coupling
changeCourseLocation():
    [PMD] Loose Coupling